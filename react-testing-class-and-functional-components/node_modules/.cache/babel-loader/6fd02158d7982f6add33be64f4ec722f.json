{"ast":null,"code":"var _jsxFileName = \"/home/aman/Desktop/Javascript-And-React-Core-Concepts-2021/react-testing-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      error: false\n    }; // need to bind this for decrementCounter and incrementCounter, since they use\n    // this.state and this.setState\n\n    this.decrementCounter = this.decrementCounter.bind(this);\n    this.incrementCounter = this.incrementCounter.bind(this);\n  } // for challenge #2, the behavior for decrement is complicated enough\n  // that I separated the function from the jsx.\n\n\n  decrementCounter() {\n    if (this.state.counter === 0) {\n      this.setState({\n        error: true\n      });\n    } else {\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    }\n  } // for challenge #3, I separated the incrementCounter onClick\n\n\n  incrementCounter() {\n    if (this.state.error) {\n      this.setState({\n        error: false\n      });\n    }\n\n    this.setState({\n      counter: this.state.counter + 1\n    });\n  }\n\n  render() {\n    // determine whether error is hidden based on state\n    const errorClass = this.state.error ? '' : 'hidden';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-test\": \"component-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-test\": \"counter-display\",\n        children: [\"The counter is currently \", this.state.counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-test\": \"error-message\",\n        className: `error ${errorClass}`,\n        children: \"The counter cannot go below 0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-test\": \"increment-button\",\n        onClick: this.incrementCounter,\n        children: \"Increment counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-test\": \"decrement-button\",\n        onClick: this.decrementCounter,\n        children: \"Decrement counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Desktop/Javascript-And-React-Core-Concepts-2021/react-testing-redux/src/App.js"],"names":["React","Component","App","constructor","props","state","counter","error","decrementCounter","bind","incrementCounter","setState","render","errorClass"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb,CAHiB,CAQjB;AACA;;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD,GAbyB,CAc1B;AACA;;;AACAD,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKH,KAAL,CAAWC,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFD,MAEO;AACL,WAAKI,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,OAAd;AACD;AACF,GAtByB,CAwB1B;;;AACAI,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKL,KAAL,CAAWE,KAAf,EAAsB;AACpB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;AACD,SAAKI,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,KAAd;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,UAAU,GAAG,KAAKR,KAAL,CAAWE,KAAX,GAAmB,EAAnB,GAAwB,QAA3C;AAEA,wBACE;AAAK,mBAAU,eAAf;AAAA,8BACA;AAAI,qBAAU,iBAAd;AAAA,gDAA0D,KAAKF,KAAL,CAAWC,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,qBAAU,eAAf;AAA+B,QAAA,SAAS,EAAG,SAAQO,UAAW,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAKA;AACE,qBAAU,kBADZ;AAEE,QAAA,OAAO,EAAE,KAAKH,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAWA;AACE,qBAAU,kBADZ;AAEE,QAAA,OAAO,EAAE,KAAKF,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAxDyB;;AA2D5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      error: false,\n    };\n\n    // need to bind this for decrementCounter and incrementCounter, since they use\n    // this.state and this.setState\n    this.decrementCounter = this.decrementCounter.bind(this)\n    this.incrementCounter = this.incrementCounter.bind(this)\n  }\n  // for challenge #2, the behavior for decrement is complicated enough\n  // that I separated the function from the jsx.\n  decrementCounter() {\n    if (this.state.counter === 0) {\n      this.setState({ error: true });\n    } else {\n      this.setState({ counter: this.state.counter - 1 });\n    }\n  }\n\n  // for challenge #3, I separated the incrementCounter onClick\n  incrementCounter() {\n    if (this.state.error) {\n      this.setState({ error: false });\n    }\n    this.setState({ counter: this.state.counter + 1 });\n  }\n\n  render() {\n    // determine whether error is hidden based on state\n    const errorClass = this.state.error ? '' : 'hidden';\n\n    return (\n      <div data-test=\"component-app\">\n      <h1 data-test=\"counter-display\">The counter is currently {this.state.counter}</h1>\n      <div data-test=\"error-message\" className={`error ${errorClass}`}>\n        The counter cannot go below 0\n      </div>\n      <button\n        data-test=\"increment-button\"\n        onClick={this.incrementCounter}\n        >\n        Increment counter\n      </button>\n      <button\n        data-test=\"decrement-button\"\n        onClick={this.decrementCounter}\n        >\n        Decrement counter\n      </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}