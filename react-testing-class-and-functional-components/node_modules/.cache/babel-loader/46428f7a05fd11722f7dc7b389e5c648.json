{"ast":null,"code":"var _jsxFileName = \"/home/aman/Desktop/Javascript-And-React-Core-Concepts-2021/react-testing-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      error: false\n    }; // need to bind this for decrementCounter and incrementCounter, since they use\n    // this.state and this.setState\n\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.decrementCounter = this.decrementCounter.bind(this);\n  } // for challenge #3, I separated the incrementCounter onClick\n\n\n  incrementCounter() {\n    if (this.state.error) {\n      this.setState({\n        error: false\n      });\n    }\n\n    this.setState;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-test\": \"component-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-test\": \"counter-display\",\n        children: [\"The counter is currently \", this.state.counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-test\": \"increment-button\",\n        onClick: () => this.setState({\n          counter: this.state.counter + 1\n        }),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-test\": \"decrement-button\",\n        onClick: () => this.setState({\n          counter: this.state.counter - 1\n        }),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Desktop/Javascript-And-React-Core-Concepts-2021/react-testing-redux/src/App.js"],"names":["React","Component","App","constructor","props","state","counter","error","incrementCounter","bind","decrementCounter","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,CADC;AAETC,MAAAA,KAAK,EAAC;AAFG,KAAX,CAFgB,CAMhB;AACA;;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AAED,GAZyB,CAczB;;;AACAD,EAAAA,gBAAgB,GAAE;AACnB,QAAG,KAAKH,KAAL,CAAWE,KAAd,EAAoB;AAClB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;AACD,SAAKI,QAAL;AACC;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,mBAAU,eAAf;AAAA,8BACE;AAAI,qBAAU,iBAAd;AAAA,gDAA0D,KAAKP,KAAL,CAAWC,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,qBAAU,kBAAlB;AACA,QAAA,OAAO,EAAE,MAAI,KAAKK,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,SAAd,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAQ,qBAAU,kBAAlB;AACA,QAAA,OAAO,EAAE,MAAI,KAAKK,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,SAAd,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAjCyB;;AAmC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      counter:0,\n      error:false  \n    }\n    // need to bind this for decrementCounter and incrementCounter, since they use\n    // this.state and this.setState\n    this.incrementCounter = this.incrementCounter.bind(this)\n    this.decrementCounter = this.decrementCounter.bind(this)\n\n  }\n\n   // for challenge #3, I separated the incrementCounter onClick\n   incrementCounter(){\n  if(this.state.error){\n    this.setState({ error: false })\n  } \n  this.setState\n  }\n  render() {\n    return (\n      <div data-test=\"component-app\">\n        <h1 data-test=\"counter-display\">The counter is currently {this.state.counter}</h1>\n        <button data-test=\"increment-button\"\n        onClick={()=>this.setState({ counter: this.state.counter + 1 })}\n        >Increment</button>\n        <button data-test=\"decrement-button\"\n        onClick={()=>this.setState({ counter: this.state.counter - 1 })}\n        >Decrement</button>\n      </div>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}